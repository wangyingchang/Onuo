<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.onuo.backend.sys.dao.UserMapper">
  <resultMap id="UserMap" type="cn.onuo.backend.sys.model.User">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="resume" jdbcType="VARCHAR" property="resume" />
    <result column="register_time" jdbcType="TIMESTAMP" property="registerTime" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
  </resultMap>
  <resultMap id="UserWithRoles" type="cn.onuo.backend.sys.model.User"
             extends="UserMap">
    <collection property="roleList" column="id" javaType="list" select="findRolesByUserId" />
  </resultMap>

  <resultMap id="RoleWithPermissionsMap" type="cn.onuo.backend.sys.model.Role"
             extends="cn.onuo.backend.sys.dao.RoleMapper.RoleMap">
    <collection property="permissionList" column="id" javaType="list" select="findPermissionsByRoleId" />
  </resultMap>

  <select id="findPermissionsByRoleId" resultMap="cn.onuo.backend.sys.dao.PermissionMapper.PermissionMap"
          parameterType="string">
    select id,resource,code,handle from permission
    where id in (select role_permission.permission_id from role_permission where role_permission.role_id=#{id})
  </select>

  <select id="findRolesByUserId" resultMap="RoleWithPermissionsMap" parameterType="string">
    select id,name from role where id in (select user_role.role_id from user_role where user_role.user_id=#{id})
  </select>

  <select id="findUserByUserName" parameterType="string" resultMap="UserWithRoles">
    select id,email,username,password,avatar,resume,register_time,last_login_time from user where username=#{uasername}
  </select>
  <select id="findUserByUserId" parameterType="string" resultMap="UserMap">
    select * from user where id=#{id}
  </select>
</mapper>